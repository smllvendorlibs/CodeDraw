
type CodeDraw = "codedraw.CodeDraw"

fn codedraw_new(width: Int, height: Int): CodeDraw => {
  val codedraw = null of CodeDraw
  java {
    "codedraw = new codedraw.CodeDraw(width, height);"
  }
  codedraw
}

(* ============ Drawing Functions ==================== *)
fn codedraw_draw_rectangle(cdraw: CodeDraw, x: Int, y: Int, width: Int, height: Int): CodeDraw => {
  java {
    "cdraw.drawRectangle(x, y, width, height); "
  }
  cdraw
}

fn codedraw_draw_square(cdraw: CodeDraw, x: Int, y: Int, side_size: Int): CodeDraw => {
  java {
    "cdraw.drawSquare(x, y, side_size); "
  }
  cdraw
}

fn codedraw_draw_circle(cdraw: CodeDraw, x: Double, y: Double, radius: Double): CodeDraw => {
  java {
    "cdraw.drawCircle(x, y, radius); "
  }
  cdraw
}

fn codedraw_draw_line(cdraw: CodeDraw, start_x: Int, start_y: Int, end_x: Int, end_y: Int): CodeDraw => {
  java {
    "cdraw.drawLine(start_x, start_y, end_x, end_y);"
  }
  cdraw
}

fn codedraw_draw_triangle(cdraw: CodeDraw, x1: Double, y1: Double, x2: Double, y2: Double, x3: Double, y3: Double): CodeDraw => {
  java {
    "cdraw.drawTriangle(x1, y1, x2, y2, x3, y3);"
  }
  cdraw
}

fn codedraw_draw_text(cdraw: CodeDraw, x: Int, y: Int, text: String): CodeDraw => {
  java {
    "cdraw.drawText(x, y, text);"
  }
  cdraw
}

(* Cast the List[Double] to List[double] using Java *)
fn codedraw_draw_plogon(cdraw: CodeDraw, vertices: List[Double]): CodeDraw => {
  java {
    "// cdraw.drawPolygon(vertices);"
  }
  cdraw
}

(* ============ Fill Functions ====================== *)

fn codedraw_fill_rectangle(cdraw: CodeDraw, x: Int, y: Int, width: Int, height: Int): CodeDraw => {
  java {
    "cdraw.fillRectangle(x, y, width, height); "
  }
  cdraw
}

fn codedraw_fill_square(cdraw: CodeDraw, x: Int, y: Int, side_size: Int): CodeDraw => {
  java {
    "cdraw.fillSquare(x, y, side_size); "
  }
  cdraw
}

fn codedraw_fill_circle(cdraw: CodeDraw, x: Double, y: Double, radius: Double): CodeDraw => {
  java {
    "cdraw.fillCircle(x, y, radius); "
  }
  cdraw
}

fn codedraw_fill_triangle(cdraw: CodeDraw, x1: Double, y1: Double, x2: Double, y2: Double, x3: Double, y3: Double): CodeDraw => {
  java {
    "cdraw.fillTriangle(x1, y1, x2, y2, x3, y3);"
  }
  cdraw
}

(* =========== Misc ======================= *)
fn codedraw_show(cdraw: CodeDraw): CodeDraw => {
  java {
    "cdraw.show();"
  }
  cdraw
}

